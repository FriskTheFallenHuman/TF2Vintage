name: CI

on: [ push, pull_request ]

jobs:
  build:
    strategy:
      matrix:
        platform: [ ubuntu-latest ] #TODO: [ windows-latest, ubuntu-latest ] 
    
    runs-on:
      ${{matrix.platform}}
    
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Configure dependencies
        if: runner.os == 'Linux'
        run: sudo apt update && sudo apt install -y build-essential gcc-multilib g++-multilib
      #- name: Configure dependencies
      #  if: runner.os == 'Windows'
      #  uses: ilammy/msvc-dev-cmd@v1
      #  with:
      #    arch: x86

      - name: Create project
        if: runner.os == 'Linux'
        run: cd src && sudo devtools/bin/vpc /tf2vintage +game /mksln TF2Vintage
      #- name: Create project
      #  if: runner.os == 'Windows'
      #  run: cd src;devtools/bin/vpc.exe /tf2vintage /2013 +game /mksln TF2vintage.sln
      
      - name: Download Steam runtime
        if: runner.os == 'Linux'
        run: |
          cd /
          sudo mkdir valve
          cd valve
          sudo wget http://media.steampowered.com/client/runtime/steam-runtime-sdk_latest.tar.xz
          sudo tar xvf steam-runtime-sdk_latest.tar.xz
          sudo mv steam-runtime-sdk_2013-09-05 steam-runtime

      - name: Build project
        if: runner.os == 'Linux'
        run: |
          sudo bash $STEAM_RUNTIME_PATH/setup.sh --debug --target="i386 amd64" --auto-upgrade
          sudo bash $STEAM_RUNTIME_PATH/setup.sh --release --target="i386 amd64" --auto-upgrade
          cd src && sudo make -f TF2Vintage.mak
        env:
          STEAM_RUNTIME_PATH: /valve/steam-runtime
      #- name: Build project
      #  if: runner.os == 'Windows'
      #  run: cd src;msbuild TF2Vintage.sln
